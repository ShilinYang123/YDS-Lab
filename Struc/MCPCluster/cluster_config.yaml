# MCP服务器集群配置
# 管理所有MCP服务器的启动、监控和协调

cluster_info:
  name: "YDS-Lab MCP Cluster"
  version: "2.0.0"
  manager_port: 3000
  health_check_interval: 60  # 秒
  
# 服务器注册表
server_registry:
  github_mcp:
    name: "GitHub MCP服务器"
    path: "Struc/MCPCluster/GitHub"
    executable: "github_mcp_server.py"
    port: 3001
    protocol: "stdio"
    capabilities:
      - "repository_management"
      - "code_collaboration"
      - "version_control"
      - "issue_tracking"
    dependencies: ["github", "requests"]
    auto_start: true
    
  excel_mcp:
    name: "Excel MCP服务器"
    path: "Struc/MCPCluster/Excel"
    executable: "excel_mcp_server.py"
    port: 3002
    protocol: "stdio"
    capabilities:
      - "spreadsheet_processing"
      - "data_analysis"
      - "report_generation"
      - "financial_calculations"
    dependencies: ["openpyxl", "pandas"]
    auto_start: true
    
  figma_mcp:
    name: "Figma MCP服务器"
    path: "Struc/MCPCluster/Figma"
    executable: "figma_mcp_server.py"
    port: 3003
    protocol: "stdio"
    capabilities:
      - "design_collaboration"
      - "prototype_management"
      - "asset_export"
      - "design_system"
    dependencies: ["figma-api", "requests"]
    auto_start: true
    
  builder_mcp:
    name: "Builder MCP服务器"
    path: "Struc/MCPCluster/Builder"
    executable: "builder_mcp_server.py"
    port: 3004
    protocol: "stdio"
    capabilities:
      - "code_generation"
      - "automated_building"
      - "deployment_management"
      - "ci_cd_integration"
    dependencies: ["jinja2", "docker"]
    auto_start: true
    
  filesystem_mcp:
    name: "FileSystem MCP服务器"
    path: "Struc/MCPCluster/FileSystem"
    executable: "filesystem_mcp_server.py"
    port: 3005
    protocol: "stdio"
    capabilities:
      - "file_operations"
      - "directory_management"
      - "backup_services"
      - "storage_optimization"
    dependencies: ["pathlib", "shutil"]
    auto_start: true
    
  database_mcp:
    name: "Database MCP服务器"
    path: "Struc/MCPCluster/Database"
    executable: "database_mcp_server.py"
    port: 3006
    protocol: "stdio"
    capabilities:
      - "data_storage"
      - "query_services"
      - "data_migration"
      - "analytics_support"
    dependencies: ["sqlalchemy", "sqlite3"]
    auto_start: true

# 启动顺序和依赖关系
startup_sequence:
  1: ["filesystem_mcp", "database_mcp"]  # 基础服务先启动
  2: ["github_mcp", "excel_mcp"]         # 核心业务服务
  3: ["figma_mcp", "builder_mcp"]        # 扩展服务

# 健康检查配置
health_checks:
  endpoint: "/health"
  timeout: 30
  retry_count: 3
  failure_threshold: 3
  
# 负载均衡配置
load_balancing:
  strategy: "round_robin"
  max_connections_per_server: 100
  connection_timeout: 30
  
# 监控和日志
monitoring:
  metrics_collection: true
  log_aggregation: true
  performance_tracking: true
  
  alerts:
    server_down: true
    high_latency: true
    resource_exhaustion: true
    
# 安全配置
security:
  authentication: "token_based"
  encryption: "tls_1_3"
  rate_limiting: true
  access_control: "whitelist"
  # 引用统一安全配置
  security_config_reference: "../Security/security_config.yaml"
  encryption_config_reference: "../Security/encryption.yaml"
  permission_config_reference: "../Security/permission.yaml"
  
# 扩展配置
scaling:
  auto_scaling: false
  min_instances: 1
  max_instances: 3
  scale_up_threshold: 80  # CPU使用率%
  scale_down_threshold: 20

# 备份和恢复
backup:
  enabled: true
  frequency: "daily"
  retention_days: 30
  backup_location: "Struc_V1_Backup/mcp_backups"